

/**
 * Singleton.java
 *
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Singleton {
    
    private static Singleton singleton = null;
    private int state;
    
    /** Creates a new instance of Singleton
     * Declared private to prevent an instance being created other than using the getInstance method
     */
    private Singleton() {
    }
    
    /**Static method getInstance is used to initialise the singleton object
     *All calls to getInstance will return the same singleton object
     */
    public static Singleton getInstance(){
        if(singleton == null){
            singleton = new Singleton();
        }
        return singleton;
    }
    
   /** The state field is provided to demonstrate that all Singleton references
     * point to the same object
     */
    public void setState(int state){
        this.state = state;
    }
    
    public int getState(){
        return state;
    }
      
}


/*
 *Source file generated by patternCoder for BlueJ Version 0.5.3.004.
 *For more info, please visit http://www.patterncoder.org.
 */